package simulation;

import com.github.rinde.rinsim.geom.Point;
import geom.Rectangle;

import java.util.Arrays;
import java.util.stream.Stream;

/**
 * Created by anthony on 5/26/17.
 */
public class Maze {
    private static final double WALL_THICKNESS = 0.1;
    private static final int[][] MAZE_SMALL = {{0, 0, 32, 0}, {48, 0, 80, 0}, {32, 16, 48, 16}, {16, 48, 48, 48}, {16, 64, 32, 64}, {0, 80, 32, 80}, {48, 80, 80, 80}, {0, 0, 0, 80}, {16, 16, 16, 64}, {32, 0, 32, 32}, {48, 16, 48, 32}, {48, 48, 48, 80}, {64, 0, 64, 64}, {80, 0, 80, 80}};
    private static final int[][] MAZE_LARGE = {{0, 0, 80, 0}, {96, 0, 192, 0}, {48, 16, 64, 16}, {80, 16, 96, 16}, {128, 16, 176, 16}, {32, 32, 48, 32}, {64, 32, 80, 32}, {96, 32, 160, 32}, {0, 48, 32, 48}, {48, 48, 64, 48}, {80, 48, 112, 48}, {32, 64, 80, 64}, {112, 64, 128, 64}, {144, 64, 160, 64}, {64, 80, 96, 80}, {112, 80, 128, 80}, {144, 80, 176, 80}, {16, 96, 48, 96}, {96, 96, 160, 96}, {16, 112, 32, 112}, {48, 112, 64, 112}, {96, 112, 144, 112}, {160, 112, 192, 112}, {0, 128, 16, 128}, {48, 128, 80, 128}, {112, 128, 176, 128}, {112, 144, 128, 144}, {144, 144, 176, 144}, {48, 160, 64, 160}, {80, 160, 112, 160}, {144, 160, 160, 160}, {32, 176, 80, 176}, {112, 176, 144, 176}, {176, 176, 192, 176}, {0, 192, 96, 192}, {112, 192, 192, 192}, {0, 0, 0, 192}, {16, 0, 16, 32}, {16, 48, 16, 80}, {16, 96, 16, 112}, {16, 144, 16, 192}, {32, 16, 32, 48}, {32, 64, 32, 96}, {32, 112, 32, 176}, {48, 16, 48, 32}, {48, 48, 48, 80}, {48, 96, 48, 112}, {48, 128, 48, 144}, {64, 32, 64, 48}, {64, 80, 64, 96}, {64, 144, 64, 176}, {80, 0, 80, 48}, {80, 96, 80, 160}, {96, 48, 96, 96}, {96, 112, 96, 144}, {96, 160, 96, 192}, {112, 0, 112, 32}, {112, 64, 112, 80}, {112, 128, 112, 144}, {128, 32, 128, 64}, {128, 144, 128, 176}, {144, 48, 144, 64}, {144, 80, 144, 112}, {144, 128, 144, 144}, {160, 16, 160, 64}, {160, 112, 160, 128}, {160, 160, 160, 192}, {176, 32, 176, 80}, {176, 96, 176, 112}, {176, 144, 176, 160}, {192, 0, 192, 192}};
    private static final int[][] MAZE_HUGE = {{0, 0, 224, 0}, {240, 0, 480, 0}, {16, 16, 48, 16}, {64, 16, 112, 16}, {128, 16, 160, 16}, {176, 16, 208, 16}, {224, 16, 240, 16}, {272, 16, 320, 16}, {384, 16, 432, 16}, {464, 16, 480, 16}, {32, 32, 80, 32}, {96, 32, 112, 32}, {160, 32, 176, 32}, {208, 32, 224, 32}, {304, 32, 320, 32}, {368, 32, 384, 32}, {416, 32, 432, 32}, {448, 32, 464, 32}, {64, 48, 96, 48}, {112, 48, 144, 48}, {176, 48, 208, 48}, {224, 48, 240, 48}, {256, 48, 288, 48}, {320, 48, 336, 48}, {384, 48, 416, 48}, {432, 48, 464, 48}, {0, 64, 32, 64}, {48, 64, 80, 64}, {112, 64, 144, 64}, {160, 64, 176, 64}, {208, 64, 224, 64}, {240, 64, 320, 64}, {336, 64, 352, 64}, {384, 64, 432, 64}, {448, 64, 464, 64}, {0, 80, 16, 80}, {32, 80, 64, 80}, {80, 80, 128, 80}, {176, 80, 240, 80}, {256, 80, 288, 80}, {320, 80, 336, 80}, {352, 80, 400, 80}, {416, 80, 432, 80}, {464, 80, 480, 80}, {16, 96, 32, 96}, {64, 96, 80, 96}, {128, 96, 176, 96}, {192, 96, 208, 96}, {240, 96, 256, 96}, {272, 96, 304, 96}, {320, 96, 368, 96}, {400, 96, 416, 96}, {448, 96, 464, 96}, {0, 112, 16, 112}, {32, 112, 48, 112}, {64, 112, 96, 112}, {176, 112, 192, 112}, {208, 112, 272, 112}, {288, 112, 320, 112}, {384, 112, 432, 112}, {464, 112, 480, 112}, {0, 128, 32, 128}, {80, 128, 112, 128}, {128, 128, 160, 128}, {208, 128, 256, 128}, {272, 128, 304, 128}, {368, 128, 384, 128}, {400, 128, 416, 128}, {448, 128, 464, 128}, {16, 144, 80, 144}, {112, 144, 128, 144}, {144, 144, 224, 144}, {256, 144, 288, 144}, {320, 144, 336, 144}, {384, 144, 416, 144}, {432, 144, 448, 144}, {32, 160, 64, 160}, {80, 160, 112, 160}, {128, 160, 320, 160}, {336, 160, 352, 160}, {368, 160, 400, 160}, {448, 160, 464, 160}, {64, 176, 96, 176}, {112, 176, 128, 176}, {144, 176, 160, 176}, {256, 176, 304, 176}, {320, 176, 336, 176}, {352, 176, 368, 176}, {0, 192, 48, 192}, {64, 192, 80, 192}, {128, 192, 240, 192}, {256, 192, 272, 192}, {336, 192, 368, 192}, {416, 192, 448, 192}, {464, 192, 480, 192}, {16, 208, 64, 208}, {80, 208, 112, 208}, {128, 208, 144, 208}, {176, 208, 208, 208}, {224, 208, 256, 208}, {272, 208, 288, 208}, {304, 208, 320, 208}, {336, 208, 352, 208}, {384, 208, 400, 208}, {0, 224, 32, 224}, {80, 224, 128, 224}, {144, 224, 160, 224}, {208, 224, 272, 224}, {288, 224, 304, 224}, {320, 224, 368, 224}, {384, 224, 416, 224}, {432, 224, 480, 224}, {32, 240, 96, 240}, {128, 240, 176, 240}, {192, 240, 208, 240}, {224, 240, 256, 240}, {272, 240, 288, 240}, {336, 240, 384, 240}, {400, 240, 432, 240}, {448, 240, 464, 240}, {0, 256, 16, 256}, {80, 256, 112, 256}, {160, 256, 192, 256}, {256, 256, 304, 256}, {320, 256, 336, 256}, {352, 256, 400, 256}, {464, 256, 480, 256}, {16, 272, 32, 272}, {80, 272, 96, 272}, {128, 272, 240, 272}, {272, 272, 288, 272}, {304, 272, 320, 272}, {336, 272, 384, 272}, {400, 272, 416, 272}, {432, 272, 448, 272}, {32, 288, 64, 288}, {96, 288, 112, 288}, {144, 288, 176, 288}, {192, 288, 256, 288}, {288, 288, 304, 288}, {320, 288, 336, 288}, {368, 288, 400, 288}, {448, 288, 464, 288}, {16, 304, 32, 304}, {48, 304, 96, 304}, {160, 304, 256, 304}, {272, 304, 400, 304}, {0, 320, 16, 320}, {96, 320, 176, 320}, {208, 320, 224, 320}, {240, 320, 288, 320}, {304, 320, 320, 320}, {352, 320, 448, 320}, {16, 336, 48, 336}, {64, 336, 96, 336}, {112, 336, 144, 336}, {160, 336, 176, 336}, {224, 336, 240, 336}, {272, 336, 304, 336}, {320, 336, 416, 336}, {128, 352, 144, 352}, {176, 352, 256, 352}, {304, 352, 320, 352}, {336, 352, 384, 352}, {432, 352, 464, 352}, {32, 368, 64, 368}, {80, 368, 128, 368}, {144, 368, 176, 368}, {208, 368, 224, 368}, {240, 368, 288, 368}, {320, 368, 352, 368}, {368, 368, 400, 368}, {448, 368, 464, 368}, {80, 384, 96, 384}, {128, 384, 144, 384}, {176, 384, 192, 384}, {208, 384, 272, 384}, {352, 384, 368, 384}, {400, 384, 416, 384}, {464, 384, 480, 384}, {16, 400, 48, 400}, {64, 400, 128, 400}, {144, 400, 176, 400}, {192, 400, 208, 400}, {304, 400, 464, 400}, {32, 416, 80, 416}, {96, 416, 144, 416}, {160, 416, 192, 416}, {208, 416, 224, 416}, {272, 416, 384, 416}, {416, 416, 432, 416}, {464, 416, 480, 416}, {16, 432, 48, 432}, {80, 432, 96, 432}, {112, 432, 144, 432}, {224, 432, 240, 432}, {256, 432, 304, 432}, {320, 432, 384, 432}, {400, 432, 416, 432}, {432, 432, 448, 432}, {48, 448, 80, 448}, {96, 448, 112, 448}, {144, 448, 160, 448}, {240, 448, 256, 448}, {288, 448, 320, 448}, {336, 448, 368, 448}, {384, 448, 400, 448}, {416, 448, 432, 448}, {448, 448, 464, 448}, {80, 464, 96, 464}, {112, 464, 128, 464}, {176, 464, 208, 464}, {224, 464, 256, 464}, {304, 464, 320, 464}, {384, 464, 416, 464}, {432, 464, 448, 464}, {464, 464, 480, 464}, {0, 480, 240, 480}, {256, 480, 480, 480}, {0, 0, 0, 480}, {16, 16, 16, 48}, {16, 160, 16, 192}, {16, 240, 16, 256}, {16, 272, 16, 304}, {16, 320, 16, 464}, {32, 48, 32, 96}, {32, 160, 32, 176}, {32, 224, 32, 272}, {32, 304, 32, 320}, {32, 352, 32, 384}, {32, 448, 32, 480}, {48, 0, 48, 16}, {48, 32, 48, 64}, {48, 96, 48, 144}, {48, 176, 48, 224}, {48, 256, 48, 288}, {48, 304, 48, 352}, {48, 384, 48, 400}, {48, 448, 48, 464}, {64, 96, 64, 128}, {64, 160, 64, 192}, {64, 208, 64, 224}, {64, 240, 64, 288}, {64, 320, 64, 368}, {64, 384, 64, 448}, {64, 464, 64, 480}, {80, 16, 80, 32}, {80, 64, 80, 80}, {80, 128, 80, 160}, {80, 192, 80, 224}, {80, 256, 80, 320}, {80, 352, 80, 368}, {80, 448, 80, 464}, {96, 32, 96, 64}, {96, 80, 96, 112}, {96, 144, 96, 160}, {96, 176, 96, 192}, {96, 320, 96, 352}, {96, 368, 96, 384}, {96, 416, 96, 432}, {96, 448, 96, 464}, {112, 0, 112, 16}, {112, 32, 112, 48}, {112, 96, 112, 144}, {112, 160, 112, 208}, {112, 240, 112, 320}, {112, 336, 112, 368}, {112, 384, 112, 400}, {112, 432, 112, 448}, {128, 16, 128, 32}, {128, 96, 128, 128}, {128, 144, 128, 160}, {128, 208, 128, 304}, {128, 368, 128, 384}, {128, 432, 128, 480}, {144, 32, 144, 112}, {144, 128, 144, 144}, {144, 176, 144, 192}, {144, 240, 144, 256}, {144, 288, 144, 320}, {144, 352, 144, 368}, {144, 384, 144, 432}, {144, 448, 144, 464}, {160, 0, 160, 80}, {160, 112, 160, 128}, {160, 192, 160, 224}, {160, 320, 160, 384}, {160, 416, 160, 448}, {160, 464, 160, 480}, {176, 80, 176, 96}, {176, 112, 176, 128}, {176, 160, 176, 176}, {176, 208, 176, 256}, {176, 288, 176, 304}, {176, 400, 176, 416}, {176, 432, 176, 464}, {192, 16, 192, 48}, {192, 64, 192, 80}, {192, 96, 192, 144}, {192, 176, 192, 192}, {192, 208, 192, 224}, {192, 304, 192, 336}, {192, 352, 192, 384}, {192, 416, 192, 448}, {208, 48, 208, 64}, {208, 112, 208, 128}, {208, 176, 208, 192}, {208, 224, 208, 272}, {208, 320, 208, 352}, {208, 368, 208, 464}, {224, 0, 224, 32}, {224, 48, 224, 64}, {224, 96, 224, 112}, {224, 160, 224, 176}, {224, 240, 224, 256}, {224, 320, 224, 336}, {224, 400, 224, 416}, {224, 432, 224, 464}, {240, 16, 240, 48}, {240, 64, 240, 96}, {240, 128, 240, 192}, {240, 256, 240, 272}, {240, 384, 240, 448}, {256, 0, 256, 64}, {256, 80, 256, 96}, {256, 192, 256, 224}, {256, 240, 256, 304}, {256, 320, 256, 368}, {256, 400, 256, 432}, {272, 16, 272, 32}, {272, 96, 272, 112}, {272, 128, 272, 144}, {272, 176, 272, 192}, {272, 288, 272, 320}, {272, 336, 272, 352}, {272, 384, 272, 416}, {272, 432, 272, 480}, {288, 32, 288, 48}, {288, 192, 288, 240}, {288, 272, 288, 288}, {288, 352, 288, 416}, {288, 448, 288, 464}, {304, 32, 304, 112}, {304, 128, 304, 160}, {304, 176, 304, 192}, {304, 224, 304, 288}, {304, 320, 304, 400}, {320, 16, 320, 32}, {320, 80, 320, 96}, {320, 112, 320, 128}, {320, 160, 320, 224}, {320, 240, 320, 256}, {320, 288, 320, 304}, {320, 352, 320, 384}, {320, 432, 320, 464}, {336, 0, 336, 64}, {336, 96, 336, 160}, {336, 192, 336, 208}, {336, 240, 336, 288}, {336, 304, 336, 336}, {336, 384, 336, 400}, {336, 448, 336, 464}, {352, 0, 352, 48}, {352, 80, 352, 96}, {352, 112, 352, 160}, {352, 288, 352, 304}, {352, 368, 352, 384}, {352, 464, 352, 480}, {368, 16, 368, 80}, {368, 96, 368, 112}, {368, 128, 368, 160}, {368, 176, 368, 224}, {368, 352, 368, 368}, {368, 448, 368, 480}, {384, 0, 384, 16}, {384, 48, 384, 64}, {384, 80, 384, 128}, {384, 160, 384, 240}, {384, 272, 384, 288}, {384, 368, 384, 400}, {384, 416, 384, 464}, {400, 16, 400, 48}, {400, 160, 400, 192}, {400, 240, 400, 272}, {400, 352, 400, 368}, {400, 400, 400, 432}, {416, 80, 416, 96}, {416, 128, 416, 224}, {416, 256, 416, 320}, {416, 336, 416, 384}, {416, 448, 416, 464}, {432, 32, 432, 80}, {432, 96, 432, 176}, {432, 208, 432, 304}, {432, 336, 432, 400}, {432, 416, 432, 448}, {432, 464, 432, 480}, {448, 0, 448, 32}, {448, 64, 448, 112}, {448, 128, 448, 144}, {448, 160, 448, 208}, {448, 240, 448, 272}, {448, 288, 448, 336}, {448, 384, 448, 416}, {448, 448, 448, 464}, {464, 48, 464, 64}, {464, 112, 464, 128}, {464, 144, 464, 176}, {464, 208, 464, 224}, {464, 256, 464, 272}, {464, 304, 464, 384}, {464, 432, 464, 448}, {480, 0, 480, 480}};

    private final int range;
    private final int[][] maze;

    private Maze(int range, int[][] maze) {
        this.range = range;
        this.maze = maze;
    }

    public Stream<Rectangle> getWalls(Point min, Point max) {
        final Point diag = Point.divide(Point.diff(max, min), this.range);
        return Arrays.stream(this.maze)
            .map(coords -> {
                double  x1 = min.x + diag.x * coords[0] - WALL_THICKNESS/2.0,
                        y1 = min.y + diag.y * coords[1] - WALL_THICKNESS/2.0,
                        x2 = min.x + diag.x * coords[2] + WALL_THICKNESS/2.0,
                        y2 = min.y + diag.y * coords[3] + WALL_THICKNESS/2.0;
                return new Rectangle(x1, x2, y1, y2);
            });
    }

    public static Maze getSmallMaze() {
        return new Maze(80, MAZE_SMALL);
    }

    public static Maze getLargeMaze() {
        return new Maze(192, MAZE_LARGE);
    }

    public static Maze getHugeMaze() {
        return new Maze(480, MAZE_HUGE);
    }
}
